on: [push, pull_request]
name: Build & publish
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '>=3.7'
      - name: Install dependencies
        run: |
          python -m pip install setuptools_scm # for setup.py --version
          sudo apt-get install flex bison ccache
      - name: Set up caching
        uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: ${{ runner.os }}-
      - name: Set up ccache
        run: |
          ccache --max-size=2G -z
      - name: Build WASM binaries
        run: |
          ./build.sh
      - name: Build binary wheels
        run: |
          pip wheel . -w dist/
      - name: Upload binary wheel artifact
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/amaranth_yosys-*.whl
      - name: Test binary wheels
        run: |
          pip install dist/amaranth_yosys-*.whl
          python -m amaranth_yosys --help
          python -m amaranth_yosys \
            -p "read_ilang tests/inverter.il" \
            -p "proc -nomux" \
            -p "memory_collect" \
            -p "write_verilog"
      - name: Print ccache statistics
        run: |
          ccache -s
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: wheel
        path: dist/
    - name: Publish wheels to Test PyPI
      if: github.event_name == 'push' && github.event.ref == 'refs/heads/develop'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.test_pypi_token }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish wheels to PyPI
      if: github.event_name == 'push' && github.event.ref == 'refs/heads/release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
  release:
    needs: build
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'autorelease') && github.event_name == 'push' && github.ref == 'refs/heads/develop'"
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PUSH_TOKEN }}
      - name: Update release branch
        run: |
          git push origin develop:release
